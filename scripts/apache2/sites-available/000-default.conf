<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com
	ServerAdmin webmaster@localhost
	DocumentRoot /home/bit-server/workspace/html
	<Directory /home/bit-server/workspace/html>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
	</Directory>

	Alias /web/ "/home/bit-server/workspace/"
	Alias /bit-learn/ "/home/bit-server/workspace/bit-learn/"
	Alias /bit-learn "/home/bit-server/workspace/bit-learn/"
	<Directory /home/bit-server/workspace>
        Options FollowSymLinks
        AllowOverride None
        Require all granted
	</Directory>

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf

	ProxyRequests Off
	ProxyPreserveHost On

	
	# shiny-server redirect 
	RewriteEngine on
	RewriteCond %{HTTP:Upgrade} =websocket
	RewriteRule /app/(.*) ws://localhost:3838/$1 [P,L]
	RewriteCond %{HTTP:Upgrade} !=websocket
	RewriteRule /app/(.*) http://localhost:3838/$1 [P,L]
	
	ProxyPass /app/ http://localhost:3838/
	ProxyPassReverse /app/ http://localhost:3838/
	ProxyRequests Off
	
	# rstudio-server redirect 
	Redirect /auth-sign-in /rstudio/auth-sign-in  
	Redirect /auth-sign-out /rstudio/auth-sign-out

	<If "%{HTTP_REFERER} =~ /auth-sign-in/">
	RedirectMatch ^/$     /rstudio/
	</If>

	RewriteEngine on
	RewriteCond %{HTTP:Upgrade} =websocket
	RewriteRule /rstudio/(.*)     ws://localhost:8787/$1  [P,L]
	RewriteCond %{HTTP:Upgrade} !=websocket
	RewriteRule /rstudio/(.*)     http://localhost:8787/$1 [P,L]
	ProxyPass /rstudio/ http://localhost:8787/
	ProxyPassReverse /rstudio/ http://localhost:8787/
	ProxyRequests Off

	# code-server
	RewriteEngine on
	RewriteCond %{HTTP:Upgrade} =websocket
	RewriteRule /vscode/(.*)     ws://localhost:8080/$1  [P,L]
	RewriteCond %{HTTP:Upgrade} !=websocket
	RewriteRule /vscode/(.*)     http://localhost:8080/$1 [P,L]
	ProxyPass /vscode/ http://localhost:8080/
	ProxyPassReverse /vscode/ http://localhost:8080/
	ProxyRequests Off
	
</VirtualHost>
# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
